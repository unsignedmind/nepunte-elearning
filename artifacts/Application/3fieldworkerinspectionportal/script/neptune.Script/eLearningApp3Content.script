// Map variable requires declaring!
var Map;

// IF in launchpad, get the ID
if (sap.n) {
    var localViewID = this.getId();
}

function populateInspectionJobPage(data) {

    // Set 'data' to the Page Model
    modelviewInspectionJob.setData(data);

    // Always start on the (first) Comments panel
    oIconTabBarView.setSelectedKey("COMM");

    // ----- MAP -----
    // Check if Map component exists
    var jobLocationMapDiv = jobLocationMap.getDomRef();

    // If NOT already rendered on the page...
    if (jobLocationMapDiv === null) {
        // --- Build Map ---
        console.log("Build Map");

        // Navigate to the page
        // (Need to load the page before we can set the map)
        oApp.to(viewInspectionJob);

        // Check if running on a Launchpad...
        // Handle the localViewID prefix if so
        if (sap.n) {
            var reference = localViewID + "--jobLocationMap";
        } else {
            var reference = "jobLocationMap";
        }

        console.log(reference);

        setTimeout(function () {
            // setView(Lat, Long , Zoom level)
            map = L.map(reference).setView([data.equip_latitude, data.equip_longitude], 13);

            L.tileLayer("https://tile.openstreetmap.org/{z}/{x}/{y}.png", {
                maxZoom: 19,
                attribution:
                    '&copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>',
            }).addTo(map);

            L.marker([data.equip_latitude, data.equip_longitude]).addTo(map);
        }, 100);
    } else {
        // --- Update Map ---

        console.log("Update Map")


        setTimeout(function () {
            map.setView([data.equip_latitude, data.equip_longitude], 13);
            L.marker([data.equip_latitude, data.equip_longitude]).addTo(map);
        }, 100);
        // Navigate to the page
        oApp.to(viewInspectionJob);
    }

    // ----- Inspection Data -----
    // Check if any inspection data is already present, if so, 
    // populate and the mark section complete

    // Flag - Will be set to false if any data 
    // (from the Comments, Attachments, Barcode & Signature)
    // isn't present..
    var isAllDataPresent = true;

    // For each section
    // If the data is missing, reset the page...
    // If the data is present, set it to the correct component!
    // 1/4 - Comments

    if (data.inspections_comments === null || data.inspections_comments === '') {
        commentTextarea.setValue('');
        saveCommentButton.setType('Default');
        saveCommentButton.setEnabled(true);
        commentTextarea.setEditable(true);
        tabCommentsView.setIconColor('Default');
        isAllDataPresent = false;
    } else {
        commentTextarea.setValue(data.inspections_comments);
        saveCommentButton.setType('Accept');
        saveCommentButton.setEnabled(false);
        commentTextarea.setEditable(false);
        tabCommentsView.setIconColor('Positive');
    }


    // 2/4 - Picture
    if (data.inspections_attachments === null || data.inspections_attachments === '') {
        attachmentImage.setSrc('');
        cameraUploadButton.setEnabled(true);
        savePictureButton.setType('Default');
        savePictureButton.setEnabled(true);
        tabPictureView.setIconColor('Default');

        isAllDataPresent = false;
    } else {
        attachmentImage.setSrc(data.inspections_attachments);
        // ImageBase64InvisiblePlaceholder.setText(data.inspections_attachments);
        cameraUploadButton.setEnabled(false);
        savePictureButton.setType('Accept');
        savePictureButton.setEnabled(false);
        tabPictureView.setIconColor('Positive');

    }

    // 3/4 - Barcode

    if (data.inspections_barcode_scan === null || data.inspections_barcode_scan === '') {
        barCodeInput.setValue('');
        startButton.setEnabled(true);
        tabBarcodeView.setIconColor('Default');

        isAllDataPresent = false;
    } else {
        barCodeInput.setValue(data.inspections_barcode_scan);
        startButton.setEnabled(false);
        tabBarcodeView.setIconColor('Positive');
    }


    // 4/4 - Signature

    if (data.inspections_signature === null || data.inspections_signature === '') {
        imgSign.setSrc('');
        resetSignatureButton.setEnabled(true);
        saveSignatureButton.setEnabled(true);
        saveSignatureButton.setType('Default');
        tabSignView.setIconColor('Default');
        oHTMLObjectSignaturePad.setVisible(true);

        isAllDataPresent = false;
    } else {
        imgSign.setSrc(data.inspections_signature);
        imgSign.setVisible(true);
        resetSignatureButton.setEnabled(false);
        saveSignatureButton.setEnabled(false);
        saveSignatureButton.setType('Accept');
        tabSignView.setIconColor('Positive');
        oHTMLObjectSignaturePad.setVisible(false);
    }


    // After loading in the data, if all data is present
    // Set an invisible text element in the page footer to 'true'
    if (isAllDataPresent) {
        isAllDataPresentText.setText('true');
    } else {
        isAllDataPresentText.setText('false');
    }


    // This is so when navigating away from a complete inspection draft
    // No navigation confirmation box will be shown


    checkIfReadyToSubmit();

}

function checkIfReadyToSubmit() {

    var readyToSubmit = true;

    // Check state of each tab
    if (tabCommentsView.getIconColor() === 'Default') { readyToSubmit = false };
    if (tabPictureView.getIconColor() === 'Default') { readyToSubmit = false };
    if (tabBarcodeView.getIconColor() === 'Default') { readyToSubmit = false };
    if (tabSignView.getIconColor() === 'Default') { readyToSubmit = false };

    // If all colors are not "Default", enable Submit button

    if (readyToSubmit) {
        sap.m.MessageToast.show("Ready to submit");
        submitButton.setEnabled(true);
    } else {
        submitButton.setEnabled(false);
    }

}

function collateInspectionData() {

    var inspectionObject = {}

    // Check if saved data present for each section
    // If so, add it
    // Otherwise, add "null"

    if (tabCommentsView.getIconColor('Positive')) {
        inspectionObject.comments = commentTextarea.getValue();
    } else {
        inspectionObject.comments = null
    }

    if (tabPictureView.getIconColor('Positive')) {
        inspectionObject.attachments = attachmentImage.getSrc();
    } else {
        inspectionObject.attachments = null
    }

    if (tabBarcodeView.getIconColor('Positive')) {
        inspectionObject.barcode_scan = barCodeInput.getValue();
    } else {
        inspectionObject.barcode_scan = null
    }

    if (tabSignView.getIconColor('Positive')) {
        inspectionObject.signature = imgSign.getSrc();
    } else {
        inspectionObject.signature = null
    }

    return inspectionObject;

}

function savePartialInspectionAndNavigate() {

    sap.m.MessageToast.show("Saving draft...");

    var draftData = collateInspectionData();
    console.log("draftData:");
    console.log(draftData);

    var pageData = modelviewInspectionJob.getData();

    // Update inspection record with data
    // with a Where = part_number

    var options = {
        parameters: {
            "where": JSON.stringify({ 'id': pageData.inspections_id}),
        },
        data: draftData
    };

    apipostInspectionApi(options);

    // Navigate to main page and re-trigger getInspectionList
    oApp.to(myInspectionJobs);
    apigetInspections();

}

function submitInspection() {

    sap.m.MessageToast.show("Submitting Inspection...");

    var inspectionData = collateInspectionData();
    inspectionData.status = "Submitted";
    console.log("inspectionData:");
    console.log(inspectionData);

    var pageData = modelviewInspectionJob.getData();

    // Update inspection record with data
    // with a Where = part_number

    var options = {
        parameters: {
            // "where": JSON.stringify({ 'part_number': partNumber.getText(), 'status': 'Assigned' })
            "where": JSON.stringify({ 'id': pageData.inspections_id}),
        },
        data: inspectionData
    };

    apipostInspectionApi(options);

    // Navigate to main page and re-trigger getInspectionList

    oApp.to(myInspectionJobs);
    apigetInspections();

}